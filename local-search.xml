<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>1.kalii 工具aircrack-ng利用之破解wifi</title>
    <link href="/2024/05/23/1-kalii-%E5%B7%A5%E5%85%B7aircrack-ng%E5%88%A9%E7%94%A8%E4%B9%8B%E7%A0%B4%E8%A7%A3wifi/"/>
    <url>/2024/05/23/1-kalii-%E5%B7%A5%E5%85%B7aircrack-ng%E5%88%A9%E7%94%A8%E4%B9%8B%E7%A0%B4%E8%A7%A3wifi/</url>
    
    <content type="html"><![CDATA[<h3 id="WIFI万能钥匙"><a href="#WIFI万能钥匙" class="headerlink" title="WIFI万能钥匙"></a>WIFI万能钥匙</h3><p>wifi万能钥匙可以一句话概括一下：用户装了wifi万能钥匙一般会默认分享自己连的wifi密码，当你看到手机wifi万能钥匙里有可破解的wifi的时候，那都是被别人分享过的，“破解”其实就是用别人分享的密码连上了。</p><h3 id="一般wifi破解原理"><a href="#一般wifi破解原理" class="headerlink" title="一般wifi破解原理"></a>一般wifi破解原理</h3><p>破解wifi，首先需要利用一些wifi破解软件，如aircrack-ng进行抓包，我们抓到的包成为握手包，握手包里面包含了加密后的wifi认证信息（包含密码），根据不同的加密方式，破解方式与难度也有所不同。</p><h3 id="wifi加密方式的区别"><a href="#wifi加密方式的区别" class="headerlink" title="wifi加密方式的区别"></a>wifi加密方式的区别</h3><p>一般wifi加密方式分为两种wep与wpa&#x2F;wpa2，详细加密算法有兴趣的可以百度一下。<br>wep加密方式比较简单，如aircrack-ng可直接读取到密码，这种加密方式已经逐渐淘汰，而且如今常见的路由器加密已经基本上都是wpa&#x2F;wpa2加密，如wpa&#x2F;wpa2的加密方式相对复杂，所以我们从抓到的包里得到的密钥是经过更加复杂的加密，没有wep那么简单，针对wpa&#x2F;wpa2加密后的密钥只能通过暴力破解，比如，我们一般用的windows上的破解软件是EWSA，全称Elcomsoft Wireless Security Auditor。爆破一般都是基于字典的爆破，比如网上有很多wpa的字典下载，集合了很多弱口令或者人们常用的密码，</p><h3 id="如何抓到握手包？"><a href="#如何抓到握手包？" class="headerlink" title="如何抓到握手包？"></a>如何抓到握手包？</h3><p>这种抓包破解的方法的前提是需要有客户端连接的，比如你家隔壁有个网，但是他家没有任何一个设备连着这个无线网，抓包的时候也没人会去连，这种情况是无法抓包的，但是情况比较少。<br>之所以需要有客户端连接，是因为抓包的过程中会监测新设备连接这个网，有新设备连接就会有认证过程，就会有握手包，wifi破解工具比如aircrack-ng会有附加的功能：强制已连接的客户端与AP断开，这样客户端就会自动重新连接，也就能抓到包了。<br>PS：如果你输入一个错误密码也是能抓到包的，不过这个包的认证是没有成功的。</p><h3 id="工具aircrack-ng介绍"><a href="#工具aircrack-ng介绍" class="headerlink" title="工具aircrack-ng介绍"></a>工具aircrack-ng介绍</h3><p>Aircrack-ng是一个与802.11标准的无线网络分析有关的安全软件，主要功能有：网络侦测，数据包嗅探，WEP和WPA&#x2F;WPA2-PSK破解。Aircrack-ng可以工作在任何支持监听模式的无线网卡上（设备列表请参阅其官方网站或）并嗅探802.11a，802.11b，802.11g的数据。该程序可运行在Linux和Windows上。Linux版本已经被移植到了Zaurus和Maemo系统平台, 并概念验证可移植到iPhone。</p><h4 id="aircrack-ng原理："><a href="#aircrack-ng原理：" class="headerlink" title="aircrack-ng原理："></a>aircrack-ng原理：</h4><p>aircrack-ng一般是用来恢复WEP,WPA-PSK的密码，通过之前流量数据包的收集，可以用来破解数据包。<br>通过之前用wireshark收集的流量包，配合爆破的密码来进行，就可以解析数据包了。</p><h3 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程"></a>实验过程</h3><p>1.将你的无线网卡插入，并确保服务开启，再将你的无线网卡映射到虚拟机里面。<br>很重要的一步也很容易出错，要确保虚拟机USB服务开启后在进行</p><img src="/2024/05/23/1-kalii-%E5%B7%A5%E5%85%B7aircrack-ng%E5%88%A9%E7%94%A8%E4%B9%8B%E7%A0%B4%E8%A7%A3wifi/%E5%9B%BE%E7%89%871.png" class title="网页源码"><p>2.查看网卡状态</p><img src="/2024/05/23/1-kalii-%E5%B7%A5%E5%85%B7aircrack-ng%E5%88%A9%E7%94%A8%E4%B9%8B%E7%A0%B4%E8%A7%A3wifi/%E5%9B%BE%E7%89%872.png" class title="网页源码"><p>3.查看网卡是否正常<br>iwconfig</p><img src="/2024/05/23/1-kalii-%E5%B7%A5%E5%85%B7aircrack-ng%E5%88%A9%E7%94%A8%E4%B9%8B%E7%A0%B4%E8%A7%A3wifi/%E5%9B%BE%E7%89%873.png" class title="网页源码"><p> 可以看到一个名字为wlan0的网卡，如果你是笔记本物理机这里应该有两个网卡，我这个是虚拟机所以之后一个waln0。可以看到我们无线网卡已经插入虚拟机并且成功识别。</p><p>4.查看网卡是否启动<br>ifconfig</p><img src="/2024/05/23/1-kalii-%E5%B7%A5%E5%85%B7aircrack-ng%E5%88%A9%E7%94%A8%E4%B9%8B%E7%A0%B4%E8%A7%A3wifi/%E5%9B%BE%E7%89%874.png" class title="网页源码"><p>5.启动无线网卡：</p><p>ifconfig wlan0 up 启动wlan0网卡</p><p>ifconfig wlan0 down 关闭wlan0网卡</p><p> 好了现在为止关于无线网卡我们已经成功启动。</p><p>第二步：启动网卡的监听模式</p><p>1.添加网卡监听模式</p><p>airmon-ng start wlan0</p><p>此时提醒我们有两个麻烦可能会干扰，我们需要执行“airmon-ng check kill”命令。注意此时输入此命令kali系统会关闭网络服务，导致无法上网。</p><img src="/2024/05/23/1-kalii-%E5%B7%A5%E5%85%B7aircrack-ng%E5%88%A9%E7%94%A8%E4%B9%8B%E7%A0%B4%E8%A7%A3wifi/%E5%9B%BE%E7%89%876.png" class title="网页源码"><p>2.监听附近wifi<br>airodump-ng wlan0</p> <img src="/2024/05/23/1-kalii-%E5%B7%A5%E5%85%B7aircrack-ng%E5%88%A9%E7%94%A8%E4%B9%8B%E7%A0%B4%E8%A7%A3wifi/%E5%9B%BE%E7%89%877.png" class title="网页源码"><p> CH：信道 一般情况13个信道，在抓包是会不停跳动代表他所监听的信道。</p><p>BSSID：无线AP的mac地址</p><p>PWR：信号强度，当时-1 时代表无线AP和客户端有连接但是你网卡的监听距离离客户端过远。</p><p>ENC：加密算法体系</p><p>CIPHER：加密算法</p><p>ESSID：就是你WiFi名称，有些隐藏的wifi也会被发现&lt;length 0&gt;</p><p>STATION： 客户端mac</p><p>第三步：挑选一个WiFi进行单独抓包<br>1.挑选并保存抓包数据<br>我们停止抓包ctrl+c 停止抓包。</p><p>我要对nova9进行破解，通过刚才的抓包发现该wifi信道是1 还有BSSID</p><p>airodump-ng  -c 8 –bssid 0E:9E:C7:DA:80:31 -w &#x2F;home&#x2F;dyf&#x2F;Desktop&#x2F;ng wlan0 </p><p>-c 是指定信道</p><p>–bssid 指定该WiFi的mac地址</p><p>-w 指定保存的路径（该路径必须存在否则会报错）默认保存在你终端的当前路径。</p><p>我们创建一个文件来放置抓取的数据包，然后在重新对其进行监听。</p><p> 好的我们已经看见了有1个连接到我这WiFi了，我们可以打开刚才创建的文件看看里面的文件</p><img src="/2024/05/23/1-kalii-%E5%B7%A5%E5%85%B7aircrack-ng%E5%88%A9%E7%94%A8%E4%B9%8B%E7%A0%B4%E8%A7%A3wifi/%E5%9B%BE%E7%89%878.png" class title="网页源码"><p> 我们可以看到是一个apple设备连接。</p><p>3.获取握手包</p><p>我们新开一个窗口，注意刚才抓包的窗口不要停止，要一直运行。</p><p>aireplay-ng -0 20 -a 0E:9E:C7:DA:80:31  -c  B0:7D:64:D7:62:0C  wlan0</p><p>-0 模式，后面跟你要攻击的次数我给的是20，如果过大对方则会一直连接不上。</p><p>-a 无线APmac地址</p><p>-c 客户端mac地址</p><img src="/2024/05/23/1-kalii-%E5%B7%A5%E5%85%B7aircrack-ng%E5%88%A9%E7%94%A8%E4%B9%8B%E7%A0%B4%E8%A7%A3wifi/%E5%9B%BE%E7%89%879.png" class title="网页源码"><p> 注意左边红框，当你打掉对方客户端，对方进行重连是会出来握手包，如果出现则表示握手包抓取成功。</p><img src="/2024/05/23/1-kalii-%E5%B7%A5%E5%85%B7aircrack-ng%E5%88%A9%E7%94%A8%E4%B9%8B%E7%A0%B4%E8%A7%A3wifi/%E5%9B%BE%E7%89%8710.png" class title="网页源码"><p>表示已经抓取到该wifi的握手包。我们可以停止监听了。</p><p>4.破解wifi的握手包</p><p>aircrack-ng   -w  字典路径  -b  握手包路径</p><img src="/2024/05/23/1-kalii-%E5%B7%A5%E5%85%B7aircrack-ng%E5%88%A9%E7%94%A8%E4%B9%8B%E7%A0%B4%E8%A7%A3wifi/%E5%9B%BE%E7%89%8711.png" class title="网页源码"><p>我随便找了一个字典，里面有这个WiFi的密码，所以我这个包肯定是可以跑出密码的。</p><p>如果你的字典路径过于离谱也可以直接拖进去都是可以的。<br> <img src="/2024/05/23/1-kalii-%E5%B7%A5%E5%85%B7aircrack-ng%E5%88%A9%E7%94%A8%E4%B9%8B%E7%A0%B4%E8%A7%A3wifi/%E5%9B%BE%E7%89%8712.png" class title="网页源码"><br>他会给你显示你的字典有多大，每秒多少的破解速度，还有多久可以跑完整个字典,最终成功找到密码。</p><p>这种方法其实成功率取决与密码字典的大小，字典越丰富成功率也就越高。推荐几个常用字典：<a href="https://github.com/conwnet/wpa-dictionary">https://github.com/conwnet/wpa-dictionary</a><br><a href="https://drive.google.com/file/d/1L1mDFRJAcShwU1gBAbECkx7OR_C7Ef90/view">https://drive.google.com/file/d/1L1mDFRJAcShwU1gBAbECkx7OR_C7Ef90/view</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>网安学习——文件上传漏洞</title>
    <link href="/2024/05/18/%E7%BD%91%E5%AE%89%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/05/18/%E7%BD%91%E5%AE%89%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h1 id="文件上传漏洞-实例"><a href="#文件上传漏洞-实例" class="headerlink" title="文件上传漏洞 | 实例"></a>文件上传漏洞 | 实例</h1><h2 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h2><p>实验靶场：<br>接下来使用的靶场是upload_labs，共21关<br>靶场项目地址：<a href="https://github.com/c0ny1/upload-labs">https://github.com/c0ny1/upload-labs</a></p><h2 id="1-前端-js类绕过"><a href="#1-前端-js类绕过" class="headerlink" title="1.前端 js类绕过"></a>1.前端 js类绕过</h2><p>一般都是在网页上写一段 javascript 脚本，校验上传文件的后缀名，有白名单形式也有黑名单形式。</p><p>绕过方法有如下几种：<br>实例<br>靶场：Upload-labs</p><p>（Pass-01）</p> <img src="/2024/05/18/%E7%BD%91%E5%AE%89%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/%E5%9B%BE%E7%89%871.png" class><p> 1.直接在浏览器检查代码把checkFile()函数,删了或者也可以把红色框改成true，并按回车，即可成功上传php文件</p> <img src="/2024/05/18/%E7%BD%91%E5%AE%89%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/223131.jpg" class title="网页源码"><p>2.禁用前端JavaScript，尝试上传</p> <img src="/2024/05/18/%E7%BD%91%E5%AE%89%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/%E5%9B%BE%E7%89%872.png" class><p>3.通过利用 burp 抓包改包: 首先更改webshell的扩展名为.png，并启用Burp代理抓包,将文件扩展名改回.php，放行即可</p><p>Pass-02</p><p>分析代码，可以看到，后端PHP代码只对type进行了检查</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>] == <span class="hljs-string">&#x27;image/jpeg&#x27;</span>) || (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>] == <span class="hljs-string">&#x27;image/png&#x27;</span>) || (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>] == <span class="hljs-string">&#x27;image/gif&#x27;</span>) <br></code></pre></td></tr></table></figure><p>使用bp抓包，修改上传的PHP的content-type为image&#x2F;png || image&#x2F;jpeg || mage&#x2F;gif</p> <img src="/2024/05/18/%E7%BD%91%E5%AE%89%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/%E5%9B%BE%E7%89%873.png" class><h2 id="服务端黑名单检验绕过"><a href="#服务端黑名单检验绕过" class="headerlink" title="服务端黑名单检验绕过"></a>服务端黑名单检验绕过</h2><p>黑名单检测：一般有个专门的 blacklist 文件，或者黑名单数组，里面会包含常见的危险脚本文件扩展名</p><p>Pass-03</p><p>发现黑名单提示：不允许上传.asp,.aspx,.php,.jsp后缀文件！</p> <img src="/2024/05/18/%E7%BD%91%E5%AE%89%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/%E5%9B%BE%E7%89%875.png" class><p>在某些特定环境中某些特殊后缀仍会被当作php文件解析 php、php2、php3、php4、php5、php6、php7、pht、phtm、phtml。</p><p>这里用.ptml试一下，直接上传一个名为3.phtml的文件</p> <img src="/2024/05/18/%E7%BD%91%E5%AE%89%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/%E5%9B%BE%E7%89%874.png" class><p>其实这题还能用.htaccess 来进行绕过</p><blockquote><p>SetHandler application&#x2F;x-httpd-php</p></blockquote><p>这个文件里面的含义就是将所有文件解析为php。例如上传个jpg格式的一句话也可以绕过了，</p><p>Pass-04(.htaccess)</p><p>审计源代码，虽然还是黑名单，但几乎过滤了所有有问题的后缀名，除了.htaccess</p><blockquote><p>.htaccess是一个纯文本文件，它里面存放着Apache服务器配置相关的指令。<br>.htaccess主要的作用有：URL重写、自定义错误页面、MIME类型配置以及访问权限控制等。<br>主要体现在伪静态的应用、图片防盗链、自定义404错误页面、阻止&#x2F;允许特定IP&#x2F;IP段、目录浏览与主页、禁止访问指定文件类型、文件密码保护等。<br>.htaccess的用途范围主要针对当前目录。</p></blockquote><p>创建.htaccess文件，代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">方法一：<br>&lt;FilesMatch <span class="hljs-string">&quot;4.png&quot;</span>&gt;<br>SetHandler application/x-httpd-php<br>&lt;/FilesMatch&gt;<br><span class="hljs-comment">#如果当前目录下有4.png，就会被解析为.php</span><br> <br>方法二：<br>AddType application/x-httpd-php .png<br><span class="hljs-comment">#如果当前目录下有以.png结尾的文件，就会被解析为.php</span><br></code></pre></td></tr></table></figure><p>先上传.htaccess再上传4.png,</p><p>Pass-05</p><p>上传5.php、.htaccess、5.phtml等文件发现都被禁用，查看提示 存在readme.php，</p><p>php.ini是php的一个全局配置文件，对整个web服务起作用；</p><p>而.user.ini和.htaccess一样是目录的配置文件，.user.ini就是用户自定义的php.ini，可以利用这个文件来构造后门和隐藏后门。</p><p>.user.ini使用范围很广，不仅限于 Apache 服务器，同样适用于 Nginx服务器，只要服务器启用了 fastcgi 模式 (通常非线程安全模式使用的就是 fastcgi 模式)。</p><p>.user.ini 配置项中有两个配置可以起到一些作用</p><p>方法一：<br>auto_prepend_file &#x3D; <filename>         &#x2F;&#x2F;包含在文件头<br>方法二：<br>auto_append_file &#x3D; <filename>          &#x2F;&#x2F;包含在文件尾</filename></filename></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>利用Hexo搭建个人博客</title>
    <link href="/2024/05/10/%E5%88%A9%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/05/10/%E5%88%A9%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a><a href="https://hexo.io/zh-cn/docs/">Hexo</a></h3><h3 id="Hexo-Fluid-用户手册"><a href="#Hexo-Fluid-用户手册" class="headerlink" title="Hexo Fluid 用户手册"></a><a href="https://hexo.fluid-dev.com/docs/guide/">Hexo Fluid 用户手册</a></h3><h2 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h2><p>安装 Hexo必须先安装下列应用程序：</p><ul><li>Git</li><li>Node.js (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li></ul><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><p>Windows：下载并安装 <a href="https://git-scm.com/download/win">git</a>。</p><p>Mac：使用 Homebrew, MacPorts 或者下载 安装程序。</p><p>Linux (Ubuntu, Debian)：sudo apt-get install git-core</p><p>Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core</p><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>Node.js 为大多数平台提供了<a href="https://nodejs.org/en/download">官方的</a> 安装程序。觉得网速比较慢，可以前往 <a href="https://registry.npmmirror.com/binary.html?path=node/">淘宝 Node.js</a> 镜像 下载。</p><p>其它的安装方法：</p><ul><li>Windows：通过 nvs（推荐）或者 nvm 安装。</li><li>Mac：使用 Homebrew 或 MacPorts 安装。</li><li>Linux（DEB&#x2F;RPM-based）：从 NodeSource 安装。</li><li>其它：使用相应的软件包管理器进行安装，可以参考由 <a href="https://hexo.io/zh-cn/docs/">Node.js 提供的 指导</a></li></ul><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo<br></code></pre></td></tr></table></figure><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo init <span class="hljs-string">&quot;文件夹名&quot;</span><br>$ <span class="hljs-built_in">cd</span> <span class="hljs-string">&quot;文件夹名&quot;</span><br>$ npm install<br></code></pre></td></tr></table></figure><p>本地启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br>hexo server<br></code></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a>,<br>页面默认主图风格如下</p><p><img src="/pic/1.png" alt="img"></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>你可以在 _config.yml 或 代替配置文件 中修改大部分的配置,可参考<a href="https://hexo.io/zh-cn/docs/configuration">官方文档</a>。</p><h2 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h2><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">title</td><td align="left">网站标题</td></tr><tr><td align="left">subtitle</td><td align="left">网站副标题</td></tr><tr><td align="left">description</td><td align="left">网站描述</td></tr><tr><td align="left">keywords</td><td align="left">网站的关键词。支持多个关键词。</td></tr><tr><td align="left">author</td><td align="left">您的名字</td></tr><tr><td align="left">language</td><td align="left">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 zh-Hans和 zh-CN。</td></tr><tr><td align="left">timezone</td><td align="left">网站时区。Hexo 默认使用您电脑的时区。请参考 时区列表 进行设置，如 America&#x2F;New_York, Japan, 和 UTC 。一般的，对于中国大陆地区可以使用 Asia&#x2F;Shanghai。</td></tr></tbody></table><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>具体主题可以网上查找这里用Fluid主题(按需更改)</p><p> <a href="https://gitcode.com/fluid-dev/hexo-theme-fluid/overview?utm_source=csdn_github_accelerator&isLogin=1">Fluid官网</a></p><p>下载 <a href="https://gitcode.com/fluid-dev/hexo-theme-fluid/releases?utm_source=csdn_github_accelerator&isLogin=1">最新 release 版本</a> 解压到 themes 目录，并将解压出的文件夹重命名为 fluid。</p><p>指定主题</p><p>如下修改 Hexo 博客目录中的 _config.yml：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">theme: fluid  <span class="hljs-comment"># 指定主题</span><br>language: zh-CN  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure><p>创建「关于页」</p><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page about<br></code></pre></td></tr></table></figure><p>创建成功后，编辑博客目录下 &#x2F;source&#x2F;about&#x2F;index.md，添加 layout 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">---<br>title: about<br><span class="hljs-built_in">date</span>: 2020-02-23 19:20:33<br>layout: about<br>---<br></code></pre></td></tr></table></figure><p>这里写关于页的正文，支持 Markdown, HTML</p><p>本地启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g -d<br>hexo s<br></code></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:4000，Fluid主题风格页面如下">http://localhost:4000，Fluid主题风格页面如下</a></p><p><img src="/pic/2.png" alt=" "></p><h2 id="创立文章"><a href="#创立文章" class="headerlink" title="创立文章"></a>创立文章</h2><p>输入以下命令，并回车：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new <span class="hljs-string">&quot;文章名字&quot;</span><br></code></pre></td></tr></table></figure><p>执行完成后在source_posts目录下生成了一个文件，文件后缀名是“.md” 右键用VSCode打开就可以开始你的创作之旅了</p><p>推使用VSCode因为安装小插件去得到一些更加丰富的功能和体验</p><p>因为Hexo 默认我们用 Markdown 格式书写文章，如果不会用<a href="https://markdown.com.cn/editor/">Markdown语法书写</a>文章的话可以在其他地方学习一下，</p><p>或进入官网进行学习： <a href="https://markdown.com.cn/">Markdown 中文文档</a></p><p>写作时可以打开 vscode 右上角“侧边预览”小按钮实时查看效果：</p><p><img src="/pic/3.jpg"></p><h2 id="关于图片插入"><a href="#关于图片插入" class="headerlink" title="关于图片插入"></a>关于图片插入</h2><p>绝对路径</p><p>在Hexo的目录source中创建一个图片文件夹，例如pic</p><p>把你要插入的图片文件放到该目录下面，在你的文章中正常使用markdown的语法插入图片即可</p><p>例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">![img](/pic/xxx.png)<br></code></pre></td></tr></table></figure><p>相对路径</p><p>会在hexo中使用文章资源文件夹需要在config.yaml文件中更改一下配置：</p><blockquote><p>post_asset_folder: true</p></blockquote><p>当该配置被应用后，使用hexo new命令创建新文章时，会生成相同名字的文件夹，也就是文章资源文件夹。</p><p>由于项目会生成新的文件目录，同时会解析Markdown中的图片路径，会导致一个问题。<br>如在一个文件目录下，博客名为1.md，相应的存在一个1文件夹存，放入图片image.jpg</p><blockquote></blockquote><p>到此你就完成了插图，虽然在Vs预览上不会显示，但图片在你的博客上面也会正常。</p><p> 写完后更新</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"> hexo g （生成资源文件）<br>hexo d （部署到服务器）<br></code></pre></td></tr></table></figure><h2 id="发布到GitHub-Pages"><a href="#发布到GitHub-Pages" class="headerlink" title="发布到GitHub Pages"></a>发布到GitHub Pages</h2><p>如果自己有服务器的话，也可以不使用 GitHub Pages，直接部署的自己的服务器上。</p><p>在GitHub上创建一个新的代码仓库用于保存我们的网页。点击用户下的Your repositories，进入仓库页面。</p><p><img src="/pic/4.jpg" alt=" "></p><p>点击New按钮，进入仓库创建页面.</p><p>填写仓库名，格式必须为<span style="color:red">&lt;用户名&gt;.github.io</span>“，然后点击Create repository</p><p>点击creating a new file创建一个新文件，作为我们网站的主页。</p><p>新文件的名字必须为index.html，内容先随便写一个简单的，内容示例如下，填写之后点击Commit new file提交。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;!DOCTYPE html&gt;<br>&lt;html lang=<span class="hljs-string">&quot;en&quot;</span>&gt;<br>&lt;<span class="hljs-built_in">head</span>&gt;<br>    &lt;meta charset=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;<br>    &lt;title&gt;yaorongke&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    &lt;h1&gt;yaorongke的个人主页&lt;/h1&gt;<br>    &lt;h1&gt;Hello ~&lt;/h1&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>建立好之后我们主页的地址为 https:&#x2F;&#x2F;用户名.github.io&#x2F;</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Markdown语法教程</title>
    <link href="/2024/05/10/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2024/05/10/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="1-Markdown-com-cn-简介"><a href="#1-Markdown-com-cn-简介" class="headerlink" title="1 Markdown.com.cn 简介"></a>1 Markdown.com.cn 简介</h2><ul><li>支持自定义样式的 Markdown 编辑器</li><li>支持微信公众号、知乎和稀土掘金</li><li>点击右上方对应图标，一键复制到各平台</li></ul><h2 id="2-Markdown语法教程"><a href="#2-Markdown语法教程" class="headerlink" title="2 Markdown语法教程"></a>2 Markdown语法教程</h2><h3 id="2-1-标题"><a href="#2-1-标题" class="headerlink" title="2.1 标题"></a>2.1 标题</h3><p>不同数量的<code>#</code>可以完成不同的标题，如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h3 id="2-2-字体"><a href="#2-2-字体" class="headerlink" title="2.2 字体"></a>2.2 字体</h3><p>粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：</p><p><strong>这个是粗体</strong></p><p><em>这个是斜体</em></p><p><em><strong>这个是粗体加斜体</strong></em></p><p>~这里想用删除线~~</p><p>注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。</p><h3 id="2-3-无序列表"><a href="#2-3-无序列表" class="headerlink" title="2.3 无序列表"></a>2.3 无序列表</h3><p>无序列表的使用，在符号<code>-</code>后加空格使用。如下：</p><ul><li>无序列表 1</li><li>无序列表 2</li><li>无序列表 3</li></ul><p>如果要控制列表的层级，则需要在符号<code>-</code>前使用空格。如下：</p><ul><li>无序列表 1</li><li>无序列表 2<ul><li>无序列表 2.1</li><li>无序列表 2.2</li></ul></li></ul><p><strong>由于微信原因，最多支持到二级列表</strong>。</p><h3 id="2-4-有序列表"><a href="#2-4-有序列表" class="headerlink" title="2.4 有序列表"></a>2.4 有序列表</h3><p>有序列表的使用，在数字及符号<code>.</code>后加空格后输入内容，如下：</p><ol><li>有序列表 1</li><li>有序列表 2</li><li>有序列表 3</li></ol><h3 id="2-5-引用"><a href="#2-5-引用" class="headerlink" title="2.5 引用"></a>2.5 引用</h3><p>引用的格式是在符号<code>&gt;</code>后面书写文字。如下：</p><blockquote><p>读一本好书，就是在和高尚的人谈话。 ——歌德</p></blockquote><blockquote><p>雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰</p></blockquote><h3 id="2-7-链接"><a href="#2-7-链接" class="headerlink" title="2.7 链接"></a>2.7 链接</h3><p>微信公众号仅支持公众号文章链接，即域名为<code>https://mp.weixin.qq.com/</code>的合法链接。使用方法如下所示：</p><p>对于该论述，欢迎读者查阅之前发过的文章，<a href="https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA">你是《未来世界的幸存者》么？</a><br><a id="jump_8"></a></p><h3 id="2-8-图片"><a href="#2-8-图片" class="headerlink" title="2.8 图片"></a>2.8 图片</h3><p>插入图片，格式如下：</p><p><img src="https://www.nginx.cn/wp-content/uploads/2020/03/qrcode_for_gh_82cf87d482f0_258.jpg" alt="这里写图片描述"></p><p>支持 jpg、png、gif、svg 等图片格式，<strong>其中 svg 文件仅可在微信公众平台中使用</strong>，svg 文件示例如下：</p><p><img src="https://markdown.com.cn/images/i-am-svg.svg"></p><p>支持图片<strong>拖拽和截图粘贴</strong>到编辑器中。</p><p>注：支持图片 <em><strong>拖拽和截图粘贴</strong></em> 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。</p><h3 id="2-9-分割线"><a href="#2-9-分割线" class="headerlink" title="2.9 分割线"></a>2.9 分割线</h3><p>可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：</p><hr><h3 id="2-10-表格"><a href="#2-10-表格" class="headerlink" title="2.10 表格"></a>2.10 表格</h3><p>可以使用冒号来定义表格的对齐方式，如下：</p><table><thead><tr><th align="left">姓名</th><th align="center">年龄</th><th align="right">工作</th></tr></thead><tbody><tr><td align="left">小可爱</td><td align="center">18</td><td align="right">吃可爱多</td></tr><tr><td align="left">小小勇敢</td><td align="center">20</td><td align="right">爬棵勇敢树</td></tr><tr><td align="left">小小小机智</td><td align="center">22</td><td align="right">看一本机智书</td></tr></tbody></table><h2 id="3-特殊语法"><a href="#3-特殊语法" class="headerlink" title="3. 特殊语法"></a>3. 特殊语法</h2><h3 id="3-1-脚注"><a href="#3-1-脚注" class="headerlink" title="3.1 脚注"></a>3.1 脚注</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>脚注与链接的区别如下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs markdown">链接：[<span class="hljs-string">文字</span>](<span class="hljs-link">链接</span>)<br>脚注：[<span class="hljs-string">文字</span>](<span class="hljs-link">脚注解释 &quot;脚注名字&quot;</span>)<br></code></pre></td></tr></table></figure><p>有人认为在<a href="https://en.wikipedia.org/wiki/Front-end_web_development" title="Front-end web development">大前端时代</a>的背景下，移动端开发（Android、IOS）将逐步退出历史舞台。</p><p><a href="%E6%98%AF%E6%8C%87%E6%8E%8C%E6%8F%A1%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%EF%BC%8C%E5%B9%B6%E8%83%BD%E5%88%A9%E7%94%A8%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%E7%8B%AC%E7%AB%8B%E5%AE%8C%E6%88%90%E4%BA%A7%E5%93%81%E7%9A%84%E4%BA%BA%E3%80%82" title="什么是全栈工程师">全栈工程师</a>在业务开发流程中起到了至关重要的作用。</p><p>脚注内容请拉到最下面观看。</p><h3 id="3-2-代码块"><a href="#3-2-代码块" class="headerlink" title="3.2 代码块"></a>3.2 代码块</h3><blockquote><p>支持平台：微信代码主题仅支持微信公众号！其他主题无限制。</p></blockquote><p>如果在一个行内需要引用代码，只要用反引号引起来就好，如下：</p><p>Use the <code>printf()</code> function.</p><p>在需要高亮的代码块的前一行及后一行使用三个反引号，同时<strong>第一行反引号后面表示代码块所使用的语言</strong>，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// FileName: HelloWorld.java</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HelloWorld</span> &#123;<br>  <span class="hljs-comment">// Java 入口程序，程序从此入口</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>    System.out.println(<span class="hljs-string">&quot;Hello,World!&quot;</span>); <span class="hljs-comment">// 向控制台打印一条语句</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>支持以下语言种类：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs vim">bash<br>clojure，cpp，<span class="hljs-keyword">cs</span>，css<br>dart，dockerfile, diff<br>erlang<br><span class="hljs-keyword">go</span>，gradle，groovy<br>haskell<br>java，javascript，json，julia<br>kotlin<br>lisp，<span class="hljs-keyword">lua</span><br>makefile，markdown，matlab<br>objectivec<br><span class="hljs-keyword">perl</span>，php，<span class="hljs-keyword">python</span><br>r，<span class="hljs-keyword">ruby</span>，rust<br>scala，<span class="hljs-keyword">shell</span>，sql，swift<br>tex，typescript<br>verilog，vhdl<br>xml<br>yaml<br></code></pre></td></tr></table></figure><p>如果想要更换代码高亮样式，可在上方<strong>代码主题</strong>中挑选。</p><p>其中<strong>微信代码主题与微信官方一致</strong>，有以下注意事项：</p><ul><li>带行号且不换行，代码大小与官方一致</li><li>需要在代码块处标志语言，否则无法高亮</li><li>粘贴到公众号后，用鼠标点代码块内外一次，完成高亮</li></ul><p>diff 不能同时和其他语言的高亮同时显示，且需要调整代码主题为微信代码主题以外的代码主题才能看到 diff 效果，使用效果如下:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-addition">+ 新增项</span><br><span class="hljs-deletion">- 删除项</span><br></code></pre></td></tr></table></figure><p><strong>其他主题不带行号，可自定义是否换行，代码大小与当前编辑器一致</strong></p><h3 id="3-3-数学公式"><a href="#3-3-数学公式" class="headerlink" title="3.3 数学公式"></a>3.3 数学公式</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>行内公式使用方法，比如这个化学公式：$\ce{Hg^2+ -&gt;[I-] HgI2 -&gt;[I-] [Hg^{II}I4]^2-}$</p><p>块公式使用方法如下：</p><p>$$H(D_2) &#x3D; -\left(\frac{2}{4}\log_2 \frac{2}{4} + \frac{2}{4}\log_2 \frac{2}{4}\right) &#x3D; 1$$</p><p>矩阵：</p><p>$$<br>  \begin{pmatrix}<br>  1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \<br>  1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \<br>  \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br>  1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n \<br>  \end{pmatrix}<br>$$</p><p>公式由于微信不支持，目前的解决方案是转成 svg 放到微信中，无需调整，矢量不失真。</p><p>目前测试如果公式量过大，在 Chrome 下会存在粘贴后无响应，但是在 Firefox 中始终能够成功。</p><h3 id="3-4-TOC"><a href="#3-4-TOC" class="headerlink" title="3.4 TOC"></a>3.4 TOC</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>TOC 全称为 Table of Content，列出全部标题。</p><p>[TOC]</p><p>由于微信只支持到二级列表，本工具仅支持二级标题和三级标题的显示。</p><h3 id="3-5-注音符号"><a href="#3-5-注音符号" class="headerlink" title="3.5 注音符号"></a>3.5 注音符号</h3><blockquote><p>支持平台：微信公众号。</p></blockquote><p>支持注音符号，用法如下：</p><p>Markdown Nice 这么好用，简直是{喜大普奔|hē hē hē hē}呀！</p><h3 id="3-6-横屏滑动幻灯片"><a href="#3-6-横屏滑动幻灯片" class="headerlink" title="3.6 横屏滑动幻灯片"></a>3.6 横屏滑动幻灯片</h3><blockquote><p>支持平台：微信公众号。</p></blockquote><p>通过<code>&lt;![](url),![](url)&gt;</code>这种语法设置横屏滑动滑动片，具体用法如下：</p><p>&lt;<img src="https://markdown.com.cn/images/blue.jpg" alt="蓝1">,<img src="https://markdown.com.cn/images/green.jpg" alt="绿2">,<img src="https://markdown.com.cn.jpg/" alt="红3">&gt;</p><h2 id="4-其他语法"><a href="#4-其他语法" class="headerlink" title="4 其他语法"></a>4 其他语法</h2><h3 id="4-1-HTML"><a href="#4-1-HTML" class="headerlink" title="4.1 HTML"></a>4.1 HTML</h3><p>支持原生 HTML 语法，请写内联样式，如下：</p><p><span style="display:block;text-align:right;color:orangered;">橙色居右</span><br><span style="display:block;text-align:center;color:orangered;">橙色居中</span></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/05/09/hello-world/"/>
    <url>/2024/05/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
